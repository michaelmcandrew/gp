<?php

// when a new memeber is added to CiviCRM

// look up the local and regional membership secretary email

// look up the contact id

function gpew_new_member_notification_civicrm_post( $op, $objectName, $objectId, &$objectRef ) {
	// gpew_capitation_batch_update();
	// exit;
	if($op != "create"){
		return;
	}
	if($objectName != "Membership"){
		return;
	}
	
	require_once 'api/v2/Contact.php';	
	require_once('api/v2/Relationship.php');

	// get contact data
	$contact_params=array('contact_id'=>$objectRef->contact_id);
	$contact_result=civicrm_contact_get($contact_params);
	
	//put contact data in email variable
	$data['contact']=current($contact_result);

	// get contacts local and regional party ids
	require_once 'CRM/Core/BAO/CustomValueTable.php';
	$contact_custom_params = array(
		'entityID' => $objectRef->contact_id,
		'custom_45' => 1,
		'custom_46' => 1,
		'custom_47' => 1,
		'custom_51' => 1,
		'custom_52' => 1,
	);	
	
	$contact_custom_result=CRM_Core_BAO_CustomValueTable::getValues($contact_custom_params);
	//get local party contact data
	$local_party_params=array('contact_id'=>$contact_custom_result['custom_51']);
	$local_party_result=civicrm_contact_get($local_party_params);

	//get local party contact data
	$regional_party_params=array('contact_id'=>$contact_custom_result['custom_52']);
	$regional_party_result=civicrm_contact_get($regional_party_params);
	
	//put membership information in email data
	$data['membership']['start_date'] = date ( 'd-m-Y', strtotime($objectRef->start_date));
	if(strlen($objectRef->end_date)){
		$data['membership']['end_date'] = date ( 'd-m-Y', strtotime($objectRef->end_date));		
	} else {
		$data['membership']['end_date'] = 'Life';
	}
	
	//get local membership secretary email
	$party_relations_result=civicrm_relationship_get($local_party_params);
	foreach($party_relations_result['result'] as $party_relation){
		if($party_relation['civicrm_relationship_type_id']==19 AND strlen($party_relation['email'])){
			$to[]=$party_relation['email'];
		}
	}

	//get regional membership secretary email
	$party_relations_result=civicrm_relationship_get($regional_party_params);
	foreach($party_relations_result['result'] as $party_relation){
		if($party_relation['civicrm_relationship_type_id']==19 AND strlen($party_relation['email'])){
			$to[]=$party_relation['email'];
		}
	}
	$party_email['cc']='office@greenparty.org.uk';
	
	
	// write body for local party email and for regional party email
	$data['local_party']=current($local_party_result);
	$data['regional_party']=current($regional_party_result);
	$data['custom']=$contact_custom_result;
	$email['from']=$email['reply-to']="office@greenparty.org.uk";
	$email['subject']="New member has joined your local/regional Green Party";
	$email['text']=gpew_new_member_notification_write_body($data);

//['toEmail']	// override the to address for testing
//	$regional_party_email['toEmail']=$local_party_email['toEmail']='michaelmcandrew@thirdsectordesign.org';

	// send the emails
	
	require_once('CRM/Utils/Mail.php');
	
    
//	print_r($local_party_email);
//	print_r($regional_party_email);
//	exit;
	print_r($to);
	foreach($to as $toEmail){
		$email['toEmail']=$toEmail;
//		print_r($email);
		CRM_Utils_Mail::send($email);
	}
}

// look up membership information

//send the emails, cc to office@greenparty.org.uk


function gpew_new_member_notification_write_body($data) {
	
	require_once 'CRM/Utils/Address.php';
	$address_block=CRM_Utils_Address::format($data['contact']);
		
	$text="Dear membership secretary,

This is a message from Green Party office.  Please note this new member has joined the Green Party in your area.

Name: {$data['contact']['display_name']}

Address:
{$address_block}
Email: {$data['contact']['email']}
Phone: {$data['contact']['phone']}

Membership start date: {$data['membership']['start_date']}
Membership end date: {$data['membership']['end_date']}

Local party: {$data['local_party']['display_name']}
Regional party: {$data['regional_party']['display_name']}

Ward: {$data['custom']['custom_45']}
County/District/Borough: {$data['custom']['custom_46']}
Constituency: {$data['custom']['custom_47']}

";
	
	
	require_once 'api/v2/Contact.php';
	foreach($contactIDs as $id){
		$params=array('contact_id'=>$id);
		$contact=civicrm_contact_get($params);
		$values[$id]['contact.address_block']=CRM_Utils_Address::format($contact[$id]);
	}
	
	return $text;
	
}